definitions:
  ioa.Field:
    properties:
      desc:
        type: string
      fieldType:
        type: string
      name:
        type: string
      required:
        type: boolean
    type: object
  model.Api:
    properties:
      apiGroupId:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      describe:
        type: string
      id:
        type: string
      method:
        type: string
      name:
        type: string
      params:
        items:
          $ref: '#/definitions/model.Param'
        type: array
      path:
        type: string
      pluginConfig:
        type: string
      plugins:
        type: string
      policies:
        type: string
      status:
        type: string
      targets:
        items:
          $ref: '#/definitions/model.Target'
        type: array
      updatedAt:
        type: string
    type: object
  model.ApiGroup:
    properties:
      apis:
        items:
          $ref: '#/definitions/model.Api'
        type: array
      createdAt:
        type: string
      deletedAt:
        type: string
      describe:
        type: string
      id:
        type: string
      isDefault:
        type: boolean
      name:
        type: string
      plugins:
        type: string
      policies:
        type: string
      updatedAt:
        type: string
    type: object
  model.Param:
    properties:
      apiId:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: string
      location:
        type: string
      name:
        type: string
      targetName:
        type: string
      updatedAt:
        type: string
    type: object
  model.Plugin:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      describe:
        type: string
      file_path:
        type: string
      id:
        type: string
      name:
        type: string
      status:
        type: integer
      updatedAt:
        type: string
    type: object
  model.Policy:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      desc:
        type: string
      id:
        type: string
      name:
        type: string
      plugins:
        type: string
      updatedAt:
        type: string
    type: object
  model.Target:
    properties:
      apiId:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      host:
        type: string
      id:
        type: string
      method:
        type: string
      path:
        type: string
      port:
        type: string
      scheme:
        type: string
      updatedAt:
        type: string
    type: object
info:
  contact: {}
  license: {}
paths:
  /apiGroups:
    get:
      parameters:
      - description: query, ?query=age:>:21,name:like:%jason%
        in: query
        name: query
        type: string
      - description: order, ?order=age:desc,created_at:asc
        in: query
        name: order
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        type: integer
      responses:
        "200":
          description: apiGroup array
          schema:
            items:
              $ref: '#/definitions/model.ApiGroup'
            type: array
      summary: List
      tags:
      - ApiGroup
    post:
      parameters:
      - description: ApiGroup
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.ApiGroup'
          type: object
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Create
      tags:
      - ApiGroup
  /apiGroups/{apiGroupId}:
    delete:
      parameters:
      - description: apiGroupId
        in: path
        name: apiGroupId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete
      tags:
      - ApiGroup
    get:
      parameters:
      - description: apiGroupId
        in: path
        name: apiGroupId
        required: true
        type: string
      responses:
        "200":
          description: apiGroup object
          schema:
            $ref: '#/definitions/model.ApiGroup'
            type: object
      summary: Get
      tags:
      - ApiGroup
    patch:
      parameters:
      - description: apiGroup
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.ApiGroup'
          type: object
      - description: apiGroupId
        in: path
        name: apiGroupId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Patch
      tags:
      - ApiGroup
    put:
      parameters:
      - description: apiGroup
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.ApiGroup'
          type: object
      - description: apiGroupId
        in: path
        name: apiGroupId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Put
      tags:
      - ApiGroup
  /apis:
    get:
      parameters:
      - description: query, ?query=age:>:21,name:like:%jason%
        in: query
        name: query
        type: string
      - description: order, ?order=age:desc,created_at:asc
        in: query
        name: order
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        type: integer
      responses:
        "200":
          description: api array
          schema:
            items:
              $ref: '#/definitions/model.Api'
            type: array
      summary: List
      tags:
      - Api
    post:
      parameters:
      - description: Api
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.Api'
          type: object
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Create
      tags:
      - Api
  /apis/{apiId}:
    delete:
      parameters:
      - description: apiId
        in: path
        name: apiId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete
      tags:
      - Api
    get:
      parameters:
      - description: apiId
        in: path
        name: apiId
        required: true
        type: string
      responses:
        "200":
          description: api object
          schema:
            $ref: '#/definitions/model.Api'
            type: object
      summary: Get
      tags:
      - Api
    patch:
      parameters:
      - description: api
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.Api'
          type: object
      - description: apiId
        in: path
        name: apiId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Patch
      tags:
      - Api
    put:
      parameters:
      - description: api
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.Api'
          type: object
      - description: apiId
        in: path
        name: apiId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Put
      tags:
      - Api
  /params:
    get:
      parameters:
      - description: query, ?query=age:>:21,name:like:%jason%
        in: query
        name: query
        type: string
      - description: order, ?order=age:desc,created_at:asc
        in: query
        name: order
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        type: integer
      responses:
        "200":
          description: param array
          schema:
            items:
              $ref: '#/definitions/model.Param'
            type: array
      summary: List
      tags:
      - Param
    post:
      parameters:
      - description: Param
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.Param'
          type: object
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Create
      tags:
      - Param
  /params/{paramId}:
    delete:
      parameters:
      - description: paramId
        in: path
        name: paramId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete
      tags:
      - Param
    get:
      parameters:
      - description: paramId
        in: path
        name: paramId
        required: true
        type: string
      responses:
        "200":
          description: param object
          schema:
            $ref: '#/definitions/model.Param'
            type: object
      summary: Get
      tags:
      - Param
    patch:
      parameters:
      - description: param
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.Param'
          type: object
      - description: paramId
        in: path
        name: paramId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Patch
      tags:
      - Param
    put:
      parameters:
      - description: param
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.Param'
          type: object
      - description: paramId
        in: path
        name: paramId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Put
      tags:
      - Param
  /plugins:
    get:
      parameters:
      - description: query, ?query=age:>:21,name:like:%jason%
        in: query
        name: query
        type: string
      - description: order, ?order=age:desc,created_at:asc
        in: query
        name: order
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        type: integer
      responses:
        "200":
          description: plugin array
          schema:
            items:
              $ref: '#/definitions/model.Plugin'
            type: array
      summary: List
      tags:
      - Plugin
    post:
      parameters:
      - description: Plugin
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.Plugin'
          type: object
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Create
      tags:
      - Plugin
  /plugins/{pluginId}:
    delete:
      parameters:
      - description: pluginId
        in: path
        name: pluginId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete
      tags:
      - Plugin
    get:
      parameters:
      - description: pluginId
        in: path
        name: pluginId
        required: true
        type: string
      responses:
        "200":
          description: plugin object
          schema:
            $ref: '#/definitions/model.Plugin'
            type: object
      summary: Get
      tags:
      - Plugin
    patch:
      parameters:
      - description: plugin
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.Plugin'
          type: object
      - description: pluginId
        in: path
        name: pluginId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Patch
      tags:
      - Plugin
    put:
      parameters:
      - description: plugin
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.Plugin'
          type: object
      - description: pluginId
        in: path
        name: pluginId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Put
      tags:
      - Plugin
  /plugins/{pluginId}/configTpl:
    get:
      parameters:
      - description: pluginId
        in: path
        name: pluginId
        required: true
        type: string
      responses:
        "200":
          description: plugin ConfigTpl
          schema:
            items:
              $ref: '#/definitions/ioa.Field'
            type: array
      summary: Get
      tags:
      - Plugin
  /policys:
    get:
      parameters:
      - description: query, ?query=age:>:21,name:like:%jason%
        in: query
        name: query
        type: string
      - description: order, ?order=age:desc,created_at:asc
        in: query
        name: order
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        type: integer
      responses:
        "200":
          description: policy array
          schema:
            items:
              $ref: '#/definitions/model.Policy'
            type: array
      summary: List
      tags:
      - Policy
    post:
      parameters:
      - description: Policy
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.Policy'
          type: object
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Create
      tags:
      - Policy
  /policys/{policyId}:
    delete:
      parameters:
      - description: policyId
        in: path
        name: policyId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete
      tags:
      - Policy
    get:
      parameters:
      - description: policyId
        in: path
        name: policyId
        required: true
        type: string
      responses:
        "200":
          description: policy object
          schema:
            $ref: '#/definitions/model.Policy'
            type: object
      summary: Get
      tags:
      - Policy
    patch:
      parameters:
      - description: policy
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.Policy'
          type: object
      - description: policyId
        in: path
        name: policyId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Patch
      tags:
      - Policy
    put:
      parameters:
      - description: policy
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.Policy'
          type: object
      - description: policyId
        in: path
        name: policyId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Put
      tags:
      - Policy
  /targets:
    get:
      parameters:
      - description: query, ?query=age:>:21,name:like:%jason%
        in: query
        name: query
        type: string
      - description: order, ?order=age:desc,created_at:asc
        in: query
        name: order
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        type: integer
      responses:
        "200":
          description: target array
          schema:
            items:
              $ref: '#/definitions/model.Target'
            type: array
      summary: List
      tags:
      - Target
    post:
      parameters:
      - description: Target
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.Target'
          type: object
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Create
      tags:
      - Target
  /targets/{targetId}:
    delete:
      parameters:
      - description: targetId
        in: path
        name: targetId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete
      tags:
      - Target
    get:
      parameters:
      - description: targetId
        in: path
        name: targetId
        required: true
        type: string
      responses:
        "200":
          description: target object
          schema:
            $ref: '#/definitions/model.Target'
            type: object
      summary: Get
      tags:
      - Target
    patch:
      parameters:
      - description: target
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.Target'
          type: object
      - description: targetId
        in: path
        name: targetId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Patch
      tags:
      - Target
    put:
      parameters:
      - description: target
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.Target'
          type: object
      - description: targetId
        in: path
        name: targetId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Put
      tags:
      - Target
swagger: "2.0"
