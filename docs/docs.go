// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-01-07 14:20:54.263307 +0800 CST m=+0.071197659

package docs

import (
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "contact": {},
        "license": {}
    },
    "paths": {
        "/apiGroups": {
            "get": {
                "tags": [
                    "ApiGroup"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "query, ?query=age:\u003e:21,name:like:%jason%",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order, ?order=age:desc,created_at:asc",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "apiGroup array",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ApiGroup"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ApiGroup"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "ApiGroup",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.ApiGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/apiGroups/{apiGroupId}": {
            "get": {
                "tags": [
                    "ApiGroup"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "apiGroupId",
                        "name": "apiGroupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "apiGroup object",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.ApiGroup"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ApiGroup"
                ],
                "summary": "Put",
                "parameters": [
                    {
                        "description": "apiGroup",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.ApiGroup"
                        }
                    },
                    {
                        "type": "string",
                        "description": "apiGroupId",
                        "name": "apiGroupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ApiGroup"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "apiGroupId",
                        "name": "apiGroupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "ApiGroup"
                ],
                "summary": "Patch",
                "parameters": [
                    {
                        "description": "apiGroup",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.ApiGroup"
                        }
                    },
                    {
                        "type": "string",
                        "description": "apiGroupId",
                        "name": "apiGroupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/apis": {
            "get": {
                "tags": [
                    "Api"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "query, ?query=age:\u003e:21,name:like:%jason%",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order, ?order=age:desc,created_at:asc",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "api array",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Api"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Api"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "Api",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.Api"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/apis/{apiId}": {
            "get": {
                "tags": [
                    "Api"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "apiId",
                        "name": "apiId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "api object",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.Api"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Api"
                ],
                "summary": "Put",
                "parameters": [
                    {
                        "description": "api",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.Api"
                        }
                    },
                    {
                        "type": "string",
                        "description": "apiId",
                        "name": "apiId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Api"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "apiId",
                        "name": "apiId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Api"
                ],
                "summary": "Patch",
                "parameters": [
                    {
                        "description": "api",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.Api"
                        }
                    },
                    {
                        "type": "string",
                        "description": "apiId",
                        "name": "apiId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/params": {
            "get": {
                "tags": [
                    "Param"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "query, ?query=age:\u003e:21,name:like:%jason%",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order, ?order=age:desc,created_at:asc",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "param array",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Param"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Param"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "Param",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.Param"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/params/{paramId}": {
            "get": {
                "tags": [
                    "Param"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "paramId",
                        "name": "paramId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "param object",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.Param"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Param"
                ],
                "summary": "Put",
                "parameters": [
                    {
                        "description": "param",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.Param"
                        }
                    },
                    {
                        "type": "string",
                        "description": "paramId",
                        "name": "paramId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Param"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "paramId",
                        "name": "paramId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Param"
                ],
                "summary": "Patch",
                "parameters": [
                    {
                        "description": "param",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.Param"
                        }
                    },
                    {
                        "type": "string",
                        "description": "paramId",
                        "name": "paramId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/plugins": {
            "get": {
                "tags": [
                    "Plugin"
                ],
                "summary": "List"
            }
        },
        "/plugins/{pluginName}": {
            "get": {
                "tags": [
                    "Plugin"
                ],
                "summary": "GetPluginConfigTpl",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pluginName",
                        "name": "pluginName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "plugin ConfigTpl",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ioa.Field"
                            }
                        }
                    }
                }
            }
        },
        "/policys": {
            "get": {
                "tags": [
                    "Policy"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "query, ?query=age:\u003e:21,name:like:%jason%",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order, ?order=age:desc,created_at:asc",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "policy array",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Policy"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Policy"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "Policy",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.Policy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/policys/{policyId}": {
            "get": {
                "tags": [
                    "Policy"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "policyId",
                        "name": "policyId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "policy object",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.Policy"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Policy"
                ],
                "summary": "Put",
                "parameters": [
                    {
                        "description": "policy",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.Policy"
                        }
                    },
                    {
                        "type": "string",
                        "description": "policyId",
                        "name": "policyId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Policy"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "policyId",
                        "name": "policyId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Policy"
                ],
                "summary": "Patch",
                "parameters": [
                    {
                        "description": "policy",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.Policy"
                        }
                    },
                    {
                        "type": "string",
                        "description": "policyId",
                        "name": "policyId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/targets": {
            "get": {
                "tags": [
                    "Target"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "query, ?query=age:\u003e:21,name:like:%jason%",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order, ?order=age:desc,created_at:asc",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "target array",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Target"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Target"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "Target",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.Target"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/targets/{targetId}": {
            "get": {
                "tags": [
                    "Target"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "targetId",
                        "name": "targetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "target object",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.Target"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Target"
                ],
                "summary": "Put",
                "parameters": [
                    {
                        "description": "target",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.Target"
                        }
                    },
                    {
                        "type": "string",
                        "description": "targetId",
                        "name": "targetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Target"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "targetId",
                        "name": "targetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Target"
                ],
                "summary": "Patch",
                "parameters": [
                    {
                        "description": "target",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.Target"
                        }
                    },
                    {
                        "type": "string",
                        "description": "targetId",
                        "name": "targetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ioa.Field": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "fieldType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                }
            }
        },
        "model.Api": {
            "type": "object",
            "properties": {
                "apiGroupId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "describe": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Param"
                    }
                },
                "path": {
                    "type": "string"
                },
                "pluginConfig": {
                    "type": "string"
                },
                "plugins": {
                    "type": "string"
                },
                "policies": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Target"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.ApiGroup": {
            "type": "object",
            "properties": {
                "apis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Api"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "describe": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "plugins": {
                    "type": "string"
                },
                "policies": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Param": {
            "type": "object",
            "properties": {
                "apiId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "targetName": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Policy": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "plugins": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Target": {
            "type": "object",
            "properties": {
                "apiId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "scheme": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    }
}`

type s struct{}

func (s *s) ReadDoc() string {
	return doc
}
func init() {
	swag.Register(swag.Name, &s{})
}
